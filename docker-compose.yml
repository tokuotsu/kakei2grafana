services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: kakeibo
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - metanet1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_PROTOCOL=http
    networks:
      - metanet1
    depends_on:
      - postgres

  # metabase:
  #   image: metabase/metabase:latest
  #   container_name: metabase
  #   hostname: metabase
  #   volumes:
  #     - metabase_data:/dev/random:ro
  #   ports:
  #     - 3002:3000
  #   environment:
  #     MB_DB_TYPE: postgres
  #     MB_DB_DBNAME: kakeibo
  #     MB_DB_PORT: 5432
  #     MB_DB_USER: user
  #     MB_DB_PASS: pass
  #     MB_DB_HOST: postgres
  #   networks:
  #     - metanet1
  #   healthcheck:
  #     test: curl --fail -I http://localhost:3002/api/health || exit 1
  #     interval: 15s
  #     timeout: 5s
  #     retries: 5

  adminer:
    image: adminer
    container_name: adminer
    networks:
      - metanet1
    ports:
      - 8081:8080
    depends_on:
      - postgres

volumes:
  postgres_data:
  grafana_data:
  metabase_data:

networks:
  metanet1:
    driver: bridge